name: Build
on:
  push:
    branches:
      - main
jobs:
  build-project:
    name: Build Project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Setup Node Environment
        uses: actions/setup-node@v3
      - name: Install Dependencies
        run: yarn install
      - name: Compile Project
        run: yarn build
      - name: Export Variables
        run: |
          echo "ID=$(grep "\"id\"" dist/plugin.json | sed 's/.*: *\"\(.*\)\".*/\1/')" >> "${GITHUB_ENV}"
          echo "VERSION=$(grep -m1 -oe '[0-9\.]\+' < CHANGELOG.md)" >> "${GITHUB_ENV}"
      - name: Export Artifact Name
        run: echo "PROJECT=${{ env.ID }}-${{ env.VERSION }}" >> "${GITHUB_ENV}"
      - name: Update Build Date and Version
        run: |
          sed -i "s/%TODAY%/$(date +%Y-%m-%d)/" dist/plugin.json
          sed -i "s/%VERSION%/${{ env.VERSION }}/" dist/plugin.json
      - name: Compatibility Check
        run: npx --yes @grafana/levitate@latest is-compatible --path src/module.tsx --target @grafana/data,@grafana/ui,@grafana/runtime
      - name: Package Project
        run: |
          mkdir "${{ env.PROJECT }}"
          mv dist "${{ env.PROJECT }}/${{ env.ID }}"
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: "${{ env.PROJECT }}"
          path: "${{ env.PROJECT }}"
  validate-plugin:
    name: Validate Plugin
    needs: build-project
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
      - name: Setup Go Environment
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
      - name: Package Project
        run: |
          cd "$(ls)"
          zip archive.zip . -r
          md5sum archive.zip >> "${GITHUB_STEP_SUMMARY}"
      - name: Validate Plugin
        run: |
          git clone https://github.com/grafana/plugin-validator
          pushd ./plugin-validator/pkg/cmd/plugincheck2
          go install
          popd
          plugincheck2 -config ./plugin-validator/config/default.yaml archive.zip